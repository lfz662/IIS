//------------------------------------------------------------------------------
// <auto-generated>
//   This code was generated by a tool.
//
//    Umbraco.ModelsBuilder v3.0.10.102
//
//   Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Web;
using Umbraco.Core.Models;
using Umbraco.Core.Models.PublishedContent;
using Umbraco.Web;
using Umbraco.ModelsBuilder;
using Umbraco.ModelsBuilder.Umbraco;

[assembly: PureLiveAssembly]
[assembly:ModelsBuilderAssembly(PureLive = true, SourceHash = "13afa8e706f46828")]
[assembly:System.Reflection.AssemblyVersion("0.0.0.1")]

namespace Umbraco.Web.PublishedContentModels
{
	// Mixin content Type 1055 with alias "seo"
	/// <summary>Seo</summary>
	public partial interface ISeo : IPublishedContent
	{
		/// <summary>Meta description</summary>
		string SeoMetaDescription { get; }

		/// <summary>Meta keywords</summary>
		IEnumerable<string> SeoMetaKeywords { get; }

		/// <summary>Title</summary>
		string SeoTitle { get; }

		/// <summary>Page Display SetUp</summary>
		bool UmbracoNaviHide { get; }

		/// <summary>Url Shortner</summary>
		string UmbracoUrlAlias { get; }
	}

	/// <summary>Seo</summary>
	[PublishedContentModel("seo")]
	public partial class Seo : PublishedContentModel, ISeo
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "seo";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Seo(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Seo, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Meta description: A brief description of the content on your page. This text is shown below the title in a google search result. The ideal length is between 50 and 150
		///</summary>
		[ImplementPropertyType("seoMetaDescription")]
		public string SeoMetaDescription
		{
			get { return GetSeoMetaDescription(this); }
		}

		/// <summary>Static getter for Meta description</summary>
		public static string GetSeoMetaDescription(ISeo that) { return that.GetPropertyValue<string>("seoMetaDescription"); }

		///<summary>
		/// Meta keywords: Keywords that describe the content of the page. This is considered optional since most modern search engines don't use this anymore
		///</summary>
		[ImplementPropertyType("seoMetaKeywords")]
		public IEnumerable<string> SeoMetaKeywords
		{
			get { return GetSeoMetaKeywords(this); }
		}

		/// <summary>Static getter for Meta keywords</summary>
		public static IEnumerable<string> GetSeoMetaKeywords(ISeo that) { return that.GetPropertyValue<IEnumerable<string>>("seoMetaKeywords"); }

		///<summary>
		/// Title: The title of the page, this is also the first text in a google search result. The ideal length is shorter than 60 characters
		///</summary>
		[ImplementPropertyType("seoTitle")]
		public string SeoTitle
		{
			get { return GetSeoTitle(this); }
		}

		/// <summary>Static getter for Title</summary>
		public static string GetSeoTitle(ISeo that) { return that.GetPropertyValue<string>("seoTitle"); }

		///<summary>
		/// Page Display SetUp: Check me true if you dont want to display page on live website
		///</summary>
		[ImplementPropertyType("umbracoNaviHide")]
		public bool UmbracoNaviHide
		{
			get { return GetUmbracoNaviHide(this); }
		}

		/// <summary>Static getter for Page Display SetUp</summary>
		public static bool GetUmbracoNaviHide(ISeo that) { return that.GetPropertyValue<bool>("umbracoNaviHide"); }

		///<summary>
		/// Url Shortner: Please note that the values you use must be lowercase, not use a leading slash and not use a trailing ".aspx" or trailing slash. If you are adding multiple values, they must be separated with a comma.
		///</summary>
		[ImplementPropertyType("umbracoUrlAlias")]
		public string UmbracoUrlAlias
		{
			get { return GetUmbracoUrlAlias(this); }
		}

		/// <summary>Static getter for Url Shortner</summary>
		public static string GetUmbracoUrlAlias(ISeo that) { return that.GetPropertyValue<string>("umbracoUrlAlias"); }
	}

	/// <summary>Home</summary>
	[PublishedContentModel("home")]
	public partial class Home : PublishedContentModel, ISeo
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "home";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Home(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Home, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Banner Description: Enter Banner Description
		///</summary>
		[ImplementPropertyType("bannerDescription")]
		public string BannerDescription
		{
			get { return this.GetPropertyValue<string>("bannerDescription"); }
		}

		///<summary>
		/// Banner Title: Enter Banner Title
		///</summary>
		[ImplementPropertyType("bannerTitle")]
		public string BannerTitle
		{
			get { return this.GetPropertyValue<string>("bannerTitle"); }
		}

		///<summary>
		/// Box Pager
		///</summary>
		[ImplementPropertyType("boxPager")]
		public IEnumerable<IPublishedContent> BoxPager
		{
			get { return this.GetPropertyValue<IEnumerable<IPublishedContent>>("boxPager"); }
		}

		///<summary>
		/// Call To Action Link
		///</summary>
		[ImplementPropertyType("callToActionLink")]
		public string CallToActionLink
		{
			get { return this.GetPropertyValue<string>("callToActionLink"); }
		}

		///<summary>
		/// Call To Action Title
		///</summary>
		[ImplementPropertyType("callToActionTitle")]
		public string CallToActionTitle
		{
			get { return this.GetPropertyValue<string>("callToActionTitle"); }
		}

		///<summary>
		/// Description
		///</summary>
		[ImplementPropertyType("description")]
		public string Description
		{
			get { return this.GetPropertyValue<string>("description"); }
		}

		///<summary>
		/// FeaturesList
		///</summary>
		[ImplementPropertyType("featuresList")]
		public IEnumerable<IPublishedContent> FeaturesList
		{
			get { return this.GetPropertyValue<IEnumerable<IPublishedContent>>("featuresList"); }
		}

		///<summary>
		/// Group Companies
		///</summary>
		[ImplementPropertyType("groupCompanies")]
		public IEnumerable<IPublishedContent> GroupCompanies
		{
			get { return this.GetPropertyValue<IEnumerable<IPublishedContent>>("groupCompanies"); }
		}

		///<summary>
		/// Join Texture
		///</summary>
		[ImplementPropertyType("joinTexture")]
		public IEnumerable<IPublishedContent> JoinTexture
		{
			get { return this.GetPropertyValue<IEnumerable<IPublishedContent>>("joinTexture"); }
		}

		///<summary>
		/// LFZ  At a Glance
		///</summary>
		[ImplementPropertyType("lFZAtAGlance")]
		public IEnumerable<IPublishedContent> LFzatAglance
		{
			get { return this.GetPropertyValue<IEnumerable<IPublishedContent>>("lFZAtAGlance"); }
		}

		///<summary>
		/// LFZ On Logo
		///</summary>
		[ImplementPropertyType("lFZOnLogo")]
		public IPublishedContent LFzonLogo
		{
			get { return this.GetPropertyValue<IPublishedContent>("lFZOnLogo"); }
		}

		///<summary>
		/// News
		///</summary>
		[ImplementPropertyType("news")]
		public IEnumerable<IPublishedContent> News
		{
			get { return this.GetPropertyValue<IEnumerable<IPublishedContent>>("news"); }
		}

		///<summary>
		/// Desktop Image
		///</summary>
		[ImplementPropertyType("newsDesktopImage")]
		public IPublishedContent NewsDesktopImage
		{
			get { return this.GetPropertyValue<IPublishedContent>("newsDesktopImage"); }
		}

		///<summary>
		/// Mobile Image
		///</summary>
		[ImplementPropertyType("newsMobileImage")]
		public IPublishedContent NewsMobileImage
		{
			get { return this.GetPropertyValue<IPublishedContent>("newsMobileImage"); }
		}

		///<summary>
		/// Title
		///</summary>
		[ImplementPropertyType("newsTitle")]
		public string NewsTitle
		{
			get { return this.GetPropertyValue<string>("newsTitle"); }
		}

		///<summary>
		/// Profile Section
		///</summary>
		[ImplementPropertyType("profileSection")]
		public IEnumerable<IPublishedContent> ProfileSection
		{
			get { return this.GetPropertyValue<IEnumerable<IPublishedContent>>("profileSection"); }
		}

		///<summary>
		/// Section Image
		///</summary>
		[ImplementPropertyType("sectionImage")]
		public IPublishedContent SectionImage
		{
			get { return this.GetPropertyValue<IPublishedContent>("sectionImage"); }
		}

		///<summary>
		/// Section Title
		///</summary>
		[ImplementPropertyType("sectionTitle")]
		public string SectionTitle
		{
			get { return this.GetPropertyValue<string>("sectionTitle"); }
		}

		///<summary>
		/// Show Twitter Feed
		///</summary>
		[ImplementPropertyType("showFeeds")]
		public bool ShowFeeds
		{
			get { return this.GetPropertyValue<bool>("showFeeds"); }
		}

		///<summary>
		/// showVideo
		///</summary>
		[ImplementPropertyType("showVideoOnBanner")]
		public bool ShowVideoOnBanner
		{
			get { return this.GetPropertyValue<bool>("showVideoOnBanner"); }
		}

		///<summary>
		/// Favicon
		///</summary>
		[ImplementPropertyType("siteFavicon")]
		public string SiteFavicon
		{
			get { return this.GetPropertyValue<string>("siteFavicon"); }
		}

		///<summary>
		/// Site Name
		///</summary>
		[ImplementPropertyType("siteName")]
		public string SiteName
		{
			get { return this.GetPropertyValue<string>("siteName"); }
		}

		///<summary>
		/// Banner
		///</summary>
		[ImplementPropertyType("spotLightBanner")]
		public IEnumerable<IPublishedContent> SpotLightBanner
		{
			get { return this.GetPropertyValue<IEnumerable<IPublishedContent>>("spotLightBanner"); }
		}

		///<summary>
		/// Background Image: Choose Background image for banner  for desktop
		///</summary>
		[ImplementPropertyType("spotLightDeskBgImage")]
		public IPublishedContent SpotLightDeskBgImage
		{
			get { return this.GetPropertyValue<IPublishedContent>("spotLightDeskBgImage"); }
		}

		///<summary>
		/// Mobile Image: Used for Mobile
		///</summary>
		[ImplementPropertyType("spotLightMobileBgImage")]
		public IPublishedContent SpotLightMobileBgImage
		{
			get { return this.GetPropertyValue<IPublishedContent>("spotLightMobileBgImage"); }
		}

		///<summary>
		/// Title
		///</summary>
		[ImplementPropertyType("title")]
		public string Title
		{
			get { return this.GetPropertyValue<string>("title"); }
		}

		///<summary>
		/// Video Url
		///</summary>
		[ImplementPropertyType("videoUrl")]
		public string VideoUrl
		{
			get { return this.GetPropertyValue<string>("videoUrl"); }
		}

		///<summary>
		/// Meta description: A brief description of the content on your page. This text is shown below the title in a google search result. The ideal length is between 50 and 150
		///</summary>
		[ImplementPropertyType("seoMetaDescription")]
		public string SeoMetaDescription
		{
			get { return Umbraco.Web.PublishedContentModels.Seo.GetSeoMetaDescription(this); }
		}

		///<summary>
		/// Meta keywords: Keywords that describe the content of the page. This is considered optional since most modern search engines don't use this anymore
		///</summary>
		[ImplementPropertyType("seoMetaKeywords")]
		public IEnumerable<string> SeoMetaKeywords
		{
			get { return Umbraco.Web.PublishedContentModels.Seo.GetSeoMetaKeywords(this); }
		}

		///<summary>
		/// Title: The title of the page, this is also the first text in a google search result. The ideal length is shorter than 60 characters
		///</summary>
		[ImplementPropertyType("seoTitle")]
		public string SeoTitle
		{
			get { return Umbraco.Web.PublishedContentModels.Seo.GetSeoTitle(this); }
		}

		///<summary>
		/// Page Display SetUp: Check me true if you dont want to display page on live website
		///</summary>
		[ImplementPropertyType("umbracoNaviHide")]
		public bool UmbracoNaviHide
		{
			get { return Umbraco.Web.PublishedContentModels.Seo.GetUmbracoNaviHide(this); }
		}

		///<summary>
		/// Url Shortner: Please note that the values you use must be lowercase, not use a leading slash and not use a trailing ".aspx" or trailing slash. If you are adding multiple values, they must be separated with a comma.
		///</summary>
		[ImplementPropertyType("umbracoUrlAlias")]
		public string UmbracoUrlAlias
		{
			get { return Umbraco.Web.PublishedContentModels.Seo.GetUmbracoUrlAlias(this); }
		}
	}

	/// <summary>Banner</summary>
	[PublishedContentModel("banner")]
	public partial class Banner : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "banner";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Banner(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Banner, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Banner Video
		///</summary>
		[ImplementPropertyType("bannerVideo")]
		public string BannerVideo
		{
			get { return this.GetPropertyValue<string>("bannerVideo"); }
		}

		///<summary>
		/// Call To Action Link
		///</summary>
		[ImplementPropertyType("callToActionLink")]
		public string CallToActionLink
		{
			get { return this.GetPropertyValue<string>("callToActionLink"); }
		}

		///<summary>
		/// Call To Action Title
		///</summary>
		[ImplementPropertyType("callToActionTitle")]
		public string CallToActionTitle
		{
			get { return this.GetPropertyValue<string>("callToActionTitle"); }
		}

		///<summary>
		/// Description
		///</summary>
		[ImplementPropertyType("description")]
		public string Description
		{
			get { return this.GetPropertyValue<string>("description"); }
		}

		///<summary>
		/// Image For Desktop
		///</summary>
		[ImplementPropertyType("deskImage")]
		public IPublishedContent DeskImage
		{
			get { return this.GetPropertyValue<IPublishedContent>("deskImage"); }
		}

		///<summary>
		/// Mobile Image
		///</summary>
		[ImplementPropertyType("mobileImage")]
		public IPublishedContent MobileImage
		{
			get { return this.GetPropertyValue<IPublishedContent>("mobileImage"); }
		}

		///<summary>
		/// Show Video
		///</summary>
		[ImplementPropertyType("showVideo")]
		public bool ShowVideo
		{
			get { return this.GetPropertyValue<bool>("showVideo"); }
		}

		///<summary>
		/// Title
		///</summary>
		[ImplementPropertyType("title")]
		public string Title
		{
			get { return this.GetPropertyValue<string>("title"); }
		}
	}

	// Mixin content Type 1059 with alias "bannerControl"
	/// <summary>BannerControl</summary>
	public partial interface IBannerControl : IPublishedContent
	{
		/// <summary>Banner Background Image</summary>
		IPublishedContent BannerBackgroundImage { get; }

		/// <summary>Banner Description</summary>
		string BannerDescription { get; }

		/// <summary>Banner Mobile Image</summary>
		IPublishedContent BannerMobileImage { get; }

		/// <summary>Banner Section Animation</summary>
		string BannerSectionAnimation { get; }

		/// <summary>Banner Title</summary>
		string BannerTitle { get; }

		/// <summary>Hide Banner Section</summary>
		bool IsBanner { get; }

		/// <summary>Show Video</summary>
		bool IsBannerVideo { get; }

		/// <summary>Video Url</summary>
		string VideoUrl { get; }
	}

	/// <summary>BannerControl</summary>
	[PublishedContentModel("bannerControl")]
	public partial class BannerControl : PublishedContentModel, IBannerControl
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "bannerControl";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public BannerControl(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<BannerControl, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Banner Background Image
		///</summary>
		[ImplementPropertyType("bannerBackgroundImage")]
		public IPublishedContent BannerBackgroundImage
		{
			get { return GetBannerBackgroundImage(this); }
		}

		/// <summary>Static getter for Banner Background Image</summary>
		public static IPublishedContent GetBannerBackgroundImage(IBannerControl that) { return that.GetPropertyValue<IPublishedContent>("bannerBackgroundImage"); }

		///<summary>
		/// Banner Description
		///</summary>
		[ImplementPropertyType("bannerDescription")]
		public string BannerDescription
		{
			get { return GetBannerDescription(this); }
		}

		/// <summary>Static getter for Banner Description</summary>
		public static string GetBannerDescription(IBannerControl that) { return that.GetPropertyValue<string>("bannerDescription"); }

		///<summary>
		/// Banner Mobile Image
		///</summary>
		[ImplementPropertyType("bannerMobileImage")]
		public IPublishedContent BannerMobileImage
		{
			get { return GetBannerMobileImage(this); }
		}

		/// <summary>Static getter for Banner Mobile Image</summary>
		public static IPublishedContent GetBannerMobileImage(IBannerControl that) { return that.GetPropertyValue<IPublishedContent>("bannerMobileImage"); }

		///<summary>
		/// Banner Section Animation
		///</summary>
		[ImplementPropertyType("bannerSectionAnimation")]
		public string BannerSectionAnimation
		{
			get { return GetBannerSectionAnimation(this); }
		}

		/// <summary>Static getter for Banner Section Animation</summary>
		public static string GetBannerSectionAnimation(IBannerControl that) { return that.GetPropertyValue<string>("bannerSectionAnimation"); }

		///<summary>
		/// Banner Title
		///</summary>
		[ImplementPropertyType("bannerTitle")]
		public string BannerTitle
		{
			get { return GetBannerTitle(this); }
		}

		/// <summary>Static getter for Banner Title</summary>
		public static string GetBannerTitle(IBannerControl that) { return that.GetPropertyValue<string>("bannerTitle"); }

		///<summary>
		/// Hide Banner Section
		///</summary>
		[ImplementPropertyType("isBanner")]
		public bool IsBanner
		{
			get { return GetIsBanner(this); }
		}

		/// <summary>Static getter for Hide Banner Section</summary>
		public static bool GetIsBanner(IBannerControl that) { return that.GetPropertyValue<bool>("isBanner"); }

		///<summary>
		/// Show Video
		///</summary>
		[ImplementPropertyType("isBannerVideo")]
		public bool IsBannerVideo
		{
			get { return GetIsBannerVideo(this); }
		}

		/// <summary>Static getter for Show Video</summary>
		public static bool GetIsBannerVideo(IBannerControl that) { return that.GetPropertyValue<bool>("isBannerVideo"); }

		///<summary>
		/// Video Url
		///</summary>
		[ImplementPropertyType("videoUrl")]
		public string VideoUrl
		{
			get { return GetVideoUrl(this); }
		}

		/// <summary>Static getter for Video Url</summary>
		public static string GetVideoUrl(IBannerControl that) { return that.GetPropertyValue<string>("videoUrl"); }
	}

	/// <summary>BoxPager</summary>
	[PublishedContentModel("boxPager")]
	public partial class BoxPager : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "boxPager";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public BoxPager(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<BoxPager, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Background Image
		///</summary>
		[ImplementPropertyType("bgImg")]
		public IPublishedContent BgImg
		{
			get { return this.GetPropertyValue<IPublishedContent>("bgImg"); }
		}

		///<summary>
		/// Link
		///</summary>
		[ImplementPropertyType("link")]
		public string Link
		{
			get { return this.GetPropertyValue<string>("link"); }
		}

		///<summary>
		/// Title
		///</summary>
		[ImplementPropertyType("title")]
		public string Title
		{
			get { return this.GetPropertyValue<string>("title"); }
		}
	}

	/// <summary>Explore More</summary>
	[PublishedContentModel("exploreMore")]
	public partial class ExploreMore : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "exploreMore";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public ExploreMore(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<ExploreMore, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Details
		///</summary>
		[ImplementPropertyType("details")]
		public IEnumerable<IPublishedContent> Details
		{
			get { return this.GetPropertyValue<IEnumerable<IPublishedContent>>("details"); }
		}

		///<summary>
		/// ExploreMore
		///</summary>
		[ImplementPropertyType("exploreMoreTitle")]
		public string ExploreMoreTitle
		{
			get { return this.GetPropertyValue<string>("exploreMoreTitle"); }
		}
	}

	/// <summary>ExploreMoreDetails</summary>
	[PublishedContentModel("exploreMoreDetails")]
	public partial class ExploreMoreDetails : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "exploreMoreDetails";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public ExploreMoreDetails(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<ExploreMoreDetails, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Button Animation
		///</summary>
		[ImplementPropertyType("buttonAnimation")]
		public string ButtonAnimation
		{
			get { return this.GetPropertyValue<string>("buttonAnimation"); }
		}

		///<summary>
		/// Button Link
		///</summary>
		[ImplementPropertyType("buttonLink")]
		public string ButtonLink
		{
			get { return this.GetPropertyValue<string>("buttonLink"); }
		}

		///<summary>
		/// Button Text
		///</summary>
		[ImplementPropertyType("buttonText")]
		public string ButtonText
		{
			get { return this.GetPropertyValue<string>("buttonText"); }
		}

		///<summary>
		/// Image
		///</summary>
		[ImplementPropertyType("image")]
		public IPublishedContent Image
		{
			get { return this.GetPropertyValue<IPublishedContent>("image"); }
		}

		///<summary>
		/// Mobile Image
		///</summary>
		[ImplementPropertyType("mobileImage")]
		public IPublishedContent MobileImage
		{
			get { return this.GetPropertyValue<IPublishedContent>("mobileImage"); }
		}

		///<summary>
		/// Title
		///</summary>
		[ImplementPropertyType("title")]
		public string Title
		{
			get { return this.GetPropertyValue<string>("title"); }
		}

		///<summary>
		/// Title Animation
		///</summary>
		[ImplementPropertyType("titleAnimation")]
		public string TitleAnimation
		{
			get { return this.GetPropertyValue<string>("titleAnimation"); }
		}
	}

	/// <summary>FactsGallery</summary>
	[PublishedContentModel("factsGallery")]
	public partial class FactsGallery : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "factsGallery";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public FactsGallery(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<FactsGallery, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Desktop Image
		///</summary>
		[ImplementPropertyType("desktopImage")]
		public IPublishedContent DesktopImage
		{
			get { return this.GetPropertyValue<IPublishedContent>("desktopImage"); }
		}

		///<summary>
		/// Mobile Image
		///</summary>
		[ImplementPropertyType("mobileImage")]
		public IPublishedContent MobileImage
		{
			get { return this.GetPropertyValue<IPublishedContent>("mobileImage"); }
		}

		///<summary>
		/// Title
		///</summary>
		[ImplementPropertyType("title")]
		public string Title
		{
			get { return this.GetPropertyValue<string>("title"); }
		}
	}

	/// <summary>HomeNews</summary>
	[PublishedContentModel("homeNews")]
	public partial class HomeNews : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "homeNews";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public HomeNews(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<HomeNews, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Description
		///</summary>
		[ImplementPropertyType("newsDescription")]
		public string NewsDescription
		{
			get { return this.GetPropertyValue<string>("newsDescription"); }
		}

		///<summary>
		/// Thumb Image
		///</summary>
		[ImplementPropertyType("thumbImage")]
		public IPublishedContent ThumbImage
		{
			get { return this.GetPropertyValue<IPublishedContent>("thumbImage"); }
		}

		///<summary>
		/// Title
		///</summary>
		[ImplementPropertyType("title")]
		public string Title
		{
			get { return this.GetPropertyValue<string>("title"); }
		}

		///<summary>
		/// Title Link
		///</summary>
		[ImplementPropertyType("titleLink")]
		public string TitleLink
		{
			get { return this.GetPropertyValue<string>("titleLink"); }
		}
	}

	/// <summary>Paragraph</summary>
	[PublishedContentModel("paragraph")]
	public partial class Paragraph : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "paragraph";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Paragraph(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Paragraph, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Link Url
		///</summary>
		[ImplementPropertyType("linkUrl")]
		public string LinkUrl
		{
			get { return this.GetPropertyValue<string>("linkUrl"); }
		}

		///<summary>
		/// Title
		///</summary>
		[ImplementPropertyType("title")]
		public string Title
		{
			get { return this.GetPropertyValue<string>("title"); }
		}
	}

	// Mixin content Type 1072 with alias "preetyLinkControl"
	/// <summary>PreetyLinkControl</summary>
	public partial interface IPreetyLinkControl : IPublishedContent
	{
		/// <summary>IsNewWindow</summary>
		bool IsNewWindow { get; }

		/// <summary>Page Url</summary>
		string PageUrl { get; }

		/// <summary>Pick Landing Page</summary>
		IPublishedContent PickLandingPage { get; }

		/// <summary>Redirect Page</summary>
		IPublishedContent RedirectPage { get; }
	}

	/// <summary>PreetyLinkControl</summary>
	[PublishedContentModel("preetyLinkControl")]
	public partial class PreetyLinkControl : PublishedContentModel, IPreetyLinkControl
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "preetyLinkControl";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public PreetyLinkControl(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<PreetyLinkControl, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// IsNewWindow
		///</summary>
		[ImplementPropertyType("isNewWindow")]
		public bool IsNewWindow
		{
			get { return GetIsNewWindow(this); }
		}

		/// <summary>Static getter for IsNewWindow</summary>
		public static bool GetIsNewWindow(IPreetyLinkControl that) { return that.GetPropertyValue<bool>("isNewWindow"); }

		///<summary>
		/// Page Url
		///</summary>
		[ImplementPropertyType("pageUrl")]
		public string PageUrl
		{
			get { return GetPageUrl(this); }
		}

		/// <summary>Static getter for Page Url</summary>
		public static string GetPageUrl(IPreetyLinkControl that) { return that.GetPropertyValue<string>("pageUrl"); }

		///<summary>
		/// Pick Landing Page
		///</summary>
		[ImplementPropertyType("pickLandingPage")]
		public IPublishedContent PickLandingPage
		{
			get { return GetPickLandingPage(this); }
		}

		/// <summary>Static getter for Pick Landing Page</summary>
		public static IPublishedContent GetPickLandingPage(IPreetyLinkControl that) { return that.GetPropertyValue<IPublishedContent>("pickLandingPage"); }

		///<summary>
		/// Redirect Page
		///</summary>
		[ImplementPropertyType("redirectPage")]
		public IPublishedContent RedirectPage
		{
			get { return GetRedirectPage(this); }
		}

		/// <summary>Static getter for Redirect Page</summary>
		public static IPublishedContent GetRedirectPage(IPreetyLinkControl that) { return that.GetPropertyValue<IPublishedContent>("redirectPage"); }
	}

	/// <summary>Join Texture</summary>
	[PublishedContentModel("joinTexture")]
	public partial class JoinTexture : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "joinTexture";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public JoinTexture(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<JoinTexture, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Image
		///</summary>
		[ImplementPropertyType("image")]
		public IPublishedContent Image
		{
			get { return this.GetPropertyValue<IPublishedContent>("image"); }
		}

		///<summary>
		/// Title
		///</summary>
		[ImplementPropertyType("title")]
		public string Title
		{
			get { return this.GetPropertyValue<string>("title"); }
		}
	}

	/// <summary>Features List</summary>
	[PublishedContentModel("featuresList")]
	public partial class FeaturesList : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "featuresList";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public FeaturesList(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<FeaturesList, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Description
		///</summary>
		[ImplementPropertyType("description")]
		public string Description
		{
			get { return this.GetPropertyValue<string>("description"); }
		}

		///<summary>
		/// Image
		///</summary>
		[ImplementPropertyType("image")]
		public IPublishedContent Image
		{
			get { return this.GetPropertyValue<IPublishedContent>("image"); }
		}

		///<summary>
		/// Title
		///</summary>
		[ImplementPropertyType("title")]
		public string Title
		{
			get { return this.GetPropertyValue<string>("title"); }
		}
	}

	/// <summary>LFZ At a Glance</summary>
	[PublishedContentModel("lFZAtAGlance")]
	public partial class LFzatAglance : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "lFZAtAGlance";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public LFzatAglance(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<LFzatAglance, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Description
		///</summary>
		[ImplementPropertyType("description")]
		public string Description
		{
			get { return this.GetPropertyValue<string>("description"); }
		}

		///<summary>
		/// Glance Skew Image
		///</summary>
		[ImplementPropertyType("glanceSkewImage")]
		public IPublishedContent GlanceSkewImage
		{
			get { return this.GetPropertyValue<IPublishedContent>("glanceSkewImage"); }
		}

		///<summary>
		/// Glance Skew Mobile Image
		///</summary>
		[ImplementPropertyType("glanceSkewMobileImage")]
		public IPublishedContent GlanceSkewMobileImage
		{
			get { return this.GetPropertyValue<IPublishedContent>("glanceSkewMobileImage"); }
		}

		///<summary>
		/// Glance Skew Txt
		///</summary>
		[ImplementPropertyType("glanceSkewTxt")]
		public string GlanceSkewTxt
		{
			get { return this.GetPropertyValue<string>("glanceSkewTxt"); }
		}

		///<summary>
		/// Title
		///</summary>
		[ImplementPropertyType("title")]
		public string Title
		{
			get { return this.GetPropertyValue<string>("title"); }
		}
	}

	/// <summary>Profile Section</summary>
	[PublishedContentModel("profileSection")]
	public partial class ProfileSection : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "profileSection";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public ProfileSection(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<ProfileSection, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Desk Image
		///</summary>
		[ImplementPropertyType("deskImage")]
		public IPublishedContent DeskImage
		{
			get { return this.GetPropertyValue<IPublishedContent>("deskImage"); }
		}

		///<summary>
		/// Mobile Image
		///</summary>
		[ImplementPropertyType("mobileImage")]
		public IPublishedContent MobileImage
		{
			get { return this.GetPropertyValue<IPublishedContent>("mobileImage"); }
		}

		///<summary>
		/// Profile Author
		///</summary>
		[ImplementPropertyType("profileAuthor")]
		public string ProfileAuthor
		{
			get { return this.GetPropertyValue<string>("profileAuthor"); }
		}

		///<summary>
		/// Description
		///</summary>
		[ImplementPropertyType("profileDescription")]
		public string ProfileDescription
		{
			get { return this.GetPropertyValue<string>("profileDescription"); }
		}

		///<summary>
		/// Profile Designation
		///</summary>
		[ImplementPropertyType("profileDesignation")]
		public string ProfileDesignation
		{
			get { return this.GetPropertyValue<string>("profileDesignation"); }
		}
	}

	/// <summary>LFZOnPage</summary>
	[PublishedContentModel("lFZOnPage")]
	public partial class LFzonPage : PublishedContentModel, IBannerControl, ISeo
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "lFZOnPage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public LFzonPage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<LFzonPage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Page CSS: Page CSS
		///</summary>
		[ImplementPropertyType("pageCSS")]
		public IHtmlString PageCss
		{
			get { return this.GetPropertyValue<IHtmlString>("pageCSS"); }
		}

		///<summary>
		/// Page Data: Page Data
		///</summary>
		[ImplementPropertyType("pageData")]
		public IHtmlString PageData
		{
			get { return this.GetPropertyValue<IHtmlString>("pageData"); }
		}

		///<summary>
		/// Page Script: Page Script
		///</summary>
		[ImplementPropertyType("pageScript")]
		public IHtmlString PageScript
		{
			get { return this.GetPropertyValue<IHtmlString>("pageScript"); }
		}

		///<summary>
		/// Banner Background Image
		///</summary>
		[ImplementPropertyType("bannerBackgroundImage")]
		public IPublishedContent BannerBackgroundImage
		{
			get { return Umbraco.Web.PublishedContentModels.BannerControl.GetBannerBackgroundImage(this); }
		}

		///<summary>
		/// Banner Description
		///</summary>
		[ImplementPropertyType("bannerDescription")]
		public string BannerDescription
		{
			get { return Umbraco.Web.PublishedContentModels.BannerControl.GetBannerDescription(this); }
		}

		///<summary>
		/// Banner Mobile Image
		///</summary>
		[ImplementPropertyType("bannerMobileImage")]
		public IPublishedContent BannerMobileImage
		{
			get { return Umbraco.Web.PublishedContentModels.BannerControl.GetBannerMobileImage(this); }
		}

		///<summary>
		/// Banner Section Animation
		///</summary>
		[ImplementPropertyType("bannerSectionAnimation")]
		public string BannerSectionAnimation
		{
			get { return Umbraco.Web.PublishedContentModels.BannerControl.GetBannerSectionAnimation(this); }
		}

		///<summary>
		/// Banner Title
		///</summary>
		[ImplementPropertyType("bannerTitle")]
		public string BannerTitle
		{
			get { return Umbraco.Web.PublishedContentModels.BannerControl.GetBannerTitle(this); }
		}

		///<summary>
		/// Hide Banner Section
		///</summary>
		[ImplementPropertyType("isBanner")]
		public bool IsBanner
		{
			get { return Umbraco.Web.PublishedContentModels.BannerControl.GetIsBanner(this); }
		}

		///<summary>
		/// Show Video
		///</summary>
		[ImplementPropertyType("isBannerVideo")]
		public bool IsBannerVideo
		{
			get { return Umbraco.Web.PublishedContentModels.BannerControl.GetIsBannerVideo(this); }
		}

		///<summary>
		/// Video Url
		///</summary>
		[ImplementPropertyType("videoUrl")]
		public string VideoUrl
		{
			get { return Umbraco.Web.PublishedContentModels.BannerControl.GetVideoUrl(this); }
		}

		///<summary>
		/// Meta description: A brief description of the content on your page. This text is shown below the title in a google search result. The ideal length is between 50 and 150
		///</summary>
		[ImplementPropertyType("seoMetaDescription")]
		public string SeoMetaDescription
		{
			get { return Umbraco.Web.PublishedContentModels.Seo.GetSeoMetaDescription(this); }
		}

		///<summary>
		/// Meta keywords: Keywords that describe the content of the page. This is considered optional since most modern search engines don't use this anymore
		///</summary>
		[ImplementPropertyType("seoMetaKeywords")]
		public IEnumerable<string> SeoMetaKeywords
		{
			get { return Umbraco.Web.PublishedContentModels.Seo.GetSeoMetaKeywords(this); }
		}

		///<summary>
		/// Title: The title of the page, this is also the first text in a google search result. The ideal length is shorter than 60 characters
		///</summary>
		[ImplementPropertyType("seoTitle")]
		public string SeoTitle
		{
			get { return Umbraco.Web.PublishedContentModels.Seo.GetSeoTitle(this); }
		}

		///<summary>
		/// Page Display SetUp: Check me true if you dont want to display page on live website
		///</summary>
		[ImplementPropertyType("umbracoNaviHide")]
		public bool UmbracoNaviHide
		{
			get { return Umbraco.Web.PublishedContentModels.Seo.GetUmbracoNaviHide(this); }
		}

		///<summary>
		/// Url Shortner: Please note that the values you use must be lowercase, not use a leading slash and not use a trailing ".aspx" or trailing slash. If you are adding multiple values, they must be separated with a comma.
		///</summary>
		[ImplementPropertyType("umbracoUrlAlias")]
		public string UmbracoUrlAlias
		{
			get { return Umbraco.Web.PublishedContentModels.Seo.GetUmbracoUrlAlias(this); }
		}
	}

	/// <summary>RedirectPage</summary>
	[PublishedContentModel("redirectPage")]
	public partial class RedirectPage : PublishedContentModel, IPreetyLinkControl, ISeo
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "redirectPage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public RedirectPage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<RedirectPage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// IsNewWindow
		///</summary>
		[ImplementPropertyType("isNewWindow")]
		public bool IsNewWindow
		{
			get { return Umbraco.Web.PublishedContentModels.PreetyLinkControl.GetIsNewWindow(this); }
		}

		///<summary>
		/// Page Url
		///</summary>
		[ImplementPropertyType("pageUrl")]
		public string PageUrl
		{
			get { return Umbraco.Web.PublishedContentModels.PreetyLinkControl.GetPageUrl(this); }
		}

		///<summary>
		/// Pick Landing Page
		///</summary>
		[ImplementPropertyType("pickLandingPage")]
		public IPublishedContent PickLandingPage
		{
			get { return Umbraco.Web.PublishedContentModels.PreetyLinkControl.GetPickLandingPage(this); }
		}

		///<summary>
		/// Redirect Page
		///</summary>
		[ImplementPropertyType("redirectPage")]
		public IPublishedContent RedirectPage
		{
			get { return Umbraco.Web.PublishedContentModels.PreetyLinkControl.GetRedirectPage(this); }
		}

		///<summary>
		/// Meta description: A brief description of the content on your page. This text is shown below the title in a google search result. The ideal length is between 50 and 150
		///</summary>
		[ImplementPropertyType("seoMetaDescription")]
		public string SeoMetaDescription
		{
			get { return Umbraco.Web.PublishedContentModels.Seo.GetSeoMetaDescription(this); }
		}

		///<summary>
		/// Meta keywords: Keywords that describe the content of the page. This is considered optional since most modern search engines don't use this anymore
		///</summary>
		[ImplementPropertyType("seoMetaKeywords")]
		public IEnumerable<string> SeoMetaKeywords
		{
			get { return Umbraco.Web.PublishedContentModels.Seo.GetSeoMetaKeywords(this); }
		}

		///<summary>
		/// Title: The title of the page, this is also the first text in a google search result. The ideal length is shorter than 60 characters
		///</summary>
		[ImplementPropertyType("seoTitle")]
		public string SeoTitle
		{
			get { return Umbraco.Web.PublishedContentModels.Seo.GetSeoTitle(this); }
		}

		///<summary>
		/// Page Display SetUp: Check me true if you dont want to display page on live website
		///</summary>
		[ImplementPropertyType("umbracoNaviHide")]
		public bool UmbracoNaviHide
		{
			get { return Umbraco.Web.PublishedContentModels.Seo.GetUmbracoNaviHide(this); }
		}

		///<summary>
		/// Url Shortner: Please note that the values you use must be lowercase, not use a leading slash and not use a trailing ".aspx" or trailing slash. If you are adding multiple values, they must be separated with a comma.
		///</summary>
		[ImplementPropertyType("umbracoUrlAlias")]
		public string UmbracoUrlAlias
		{
			get { return Umbraco.Web.PublishedContentModels.Seo.GetUmbracoUrlAlias(this); }
		}
	}

	/// <summary>Full Text Search Page</summary>
	[PublishedContentModel("fullTextSearchPage")]
	public partial class FullTextSearchPage : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "fullTextSearchPage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public FullTextSearchPage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<FullTextSearchPage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Body Text: Body Text
		///</summary>
		[ImplementPropertyType("bodyText")]
		public IHtmlString BodyText
		{
			get { return this.GetPropertyValue<IHtmlString>("bodyText"); }
		}
	}

	/// <summary>Search</summary>
	[PublishedContentModel("search")]
	public partial class Search : PublishedContentModel, IBannerControl, ISeo
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "search";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Search(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Search, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Banner Background Image
		///</summary>
		[ImplementPropertyType("bannerBackgroundImage")]
		public IPublishedContent BannerBackgroundImage
		{
			get { return Umbraco.Web.PublishedContentModels.BannerControl.GetBannerBackgroundImage(this); }
		}

		///<summary>
		/// Banner Description
		///</summary>
		[ImplementPropertyType("bannerDescription")]
		public string BannerDescription
		{
			get { return Umbraco.Web.PublishedContentModels.BannerControl.GetBannerDescription(this); }
		}

		///<summary>
		/// Banner Mobile Image
		///</summary>
		[ImplementPropertyType("bannerMobileImage")]
		public IPublishedContent BannerMobileImage
		{
			get { return Umbraco.Web.PublishedContentModels.BannerControl.GetBannerMobileImage(this); }
		}

		///<summary>
		/// Banner Section Animation
		///</summary>
		[ImplementPropertyType("bannerSectionAnimation")]
		public string BannerSectionAnimation
		{
			get { return Umbraco.Web.PublishedContentModels.BannerControl.GetBannerSectionAnimation(this); }
		}

		///<summary>
		/// Banner Title
		///</summary>
		[ImplementPropertyType("bannerTitle")]
		public string BannerTitle
		{
			get { return Umbraco.Web.PublishedContentModels.BannerControl.GetBannerTitle(this); }
		}

		///<summary>
		/// Hide Banner Section
		///</summary>
		[ImplementPropertyType("isBanner")]
		public bool IsBanner
		{
			get { return Umbraco.Web.PublishedContentModels.BannerControl.GetIsBanner(this); }
		}

		///<summary>
		/// Show Video
		///</summary>
		[ImplementPropertyType("isBannerVideo")]
		public bool IsBannerVideo
		{
			get { return Umbraco.Web.PublishedContentModels.BannerControl.GetIsBannerVideo(this); }
		}

		///<summary>
		/// Video Url
		///</summary>
		[ImplementPropertyType("videoUrl")]
		public string VideoUrl
		{
			get { return Umbraco.Web.PublishedContentModels.BannerControl.GetVideoUrl(this); }
		}

		///<summary>
		/// Meta description: A brief description of the content on your page. This text is shown below the title in a google search result. The ideal length is between 50 and 150
		///</summary>
		[ImplementPropertyType("seoMetaDescription")]
		public string SeoMetaDescription
		{
			get { return Umbraco.Web.PublishedContentModels.Seo.GetSeoMetaDescription(this); }
		}

		///<summary>
		/// Meta keywords: Keywords that describe the content of the page. This is considered optional since most modern search engines don't use this anymore
		///</summary>
		[ImplementPropertyType("seoMetaKeywords")]
		public IEnumerable<string> SeoMetaKeywords
		{
			get { return Umbraco.Web.PublishedContentModels.Seo.GetSeoMetaKeywords(this); }
		}

		///<summary>
		/// Title: The title of the page, this is also the first text in a google search result. The ideal length is shorter than 60 characters
		///</summary>
		[ImplementPropertyType("seoTitle")]
		public string SeoTitle
		{
			get { return Umbraco.Web.PublishedContentModels.Seo.GetSeoTitle(this); }
		}

		///<summary>
		/// Page Display SetUp: Check me true if you dont want to display page on live website
		///</summary>
		[ImplementPropertyType("umbracoNaviHide")]
		public bool UmbracoNaviHide
		{
			get { return Umbraco.Web.PublishedContentModels.Seo.GetUmbracoNaviHide(this); }
		}

		///<summary>
		/// Url Shortner: Please note that the values you use must be lowercase, not use a leading slash and not use a trailing ".aspx" or trailing slash. If you are adding multiple values, they must be separated with a comma.
		///</summary>
		[ImplementPropertyType("umbracoUrlAlias")]
		public string UmbracoUrlAlias
		{
			get { return Umbraco.Web.PublishedContentModels.Seo.GetUmbracoUrlAlias(this); }
		}
	}

	/// <summary>tw404new</summary>
	[PublishedContentModel("tw404new")]
	public partial class Tw404new : PublishedContentModel, IBannerControl, ISeo
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "tw404new";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Tw404new(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Tw404new, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Banner Background Image
		///</summary>
		[ImplementPropertyType("bannerBackgroundImage")]
		public IPublishedContent BannerBackgroundImage
		{
			get { return Umbraco.Web.PublishedContentModels.BannerControl.GetBannerBackgroundImage(this); }
		}

		///<summary>
		/// Banner Description
		///</summary>
		[ImplementPropertyType("bannerDescription")]
		public string BannerDescription
		{
			get { return Umbraco.Web.PublishedContentModels.BannerControl.GetBannerDescription(this); }
		}

		///<summary>
		/// Banner Mobile Image
		///</summary>
		[ImplementPropertyType("bannerMobileImage")]
		public IPublishedContent BannerMobileImage
		{
			get { return Umbraco.Web.PublishedContentModels.BannerControl.GetBannerMobileImage(this); }
		}

		///<summary>
		/// Banner Section Animation
		///</summary>
		[ImplementPropertyType("bannerSectionAnimation")]
		public string BannerSectionAnimation
		{
			get { return Umbraco.Web.PublishedContentModels.BannerControl.GetBannerSectionAnimation(this); }
		}

		///<summary>
		/// Banner Title
		///</summary>
		[ImplementPropertyType("bannerTitle")]
		public string BannerTitle
		{
			get { return Umbraco.Web.PublishedContentModels.BannerControl.GetBannerTitle(this); }
		}

		///<summary>
		/// Hide Banner Section
		///</summary>
		[ImplementPropertyType("isBanner")]
		public bool IsBanner
		{
			get { return Umbraco.Web.PublishedContentModels.BannerControl.GetIsBanner(this); }
		}

		///<summary>
		/// Show Video
		///</summary>
		[ImplementPropertyType("isBannerVideo")]
		public bool IsBannerVideo
		{
			get { return Umbraco.Web.PublishedContentModels.BannerControl.GetIsBannerVideo(this); }
		}

		///<summary>
		/// Video Url
		///</summary>
		[ImplementPropertyType("videoUrl")]
		public string VideoUrl
		{
			get { return Umbraco.Web.PublishedContentModels.BannerControl.GetVideoUrl(this); }
		}

		///<summary>
		/// Meta description: A brief description of the content on your page. This text is shown below the title in a google search result. The ideal length is between 50 and 150
		///</summary>
		[ImplementPropertyType("seoMetaDescription")]
		public string SeoMetaDescription
		{
			get { return Umbraco.Web.PublishedContentModels.Seo.GetSeoMetaDescription(this); }
		}

		///<summary>
		/// Meta keywords: Keywords that describe the content of the page. This is considered optional since most modern search engines don't use this anymore
		///</summary>
		[ImplementPropertyType("seoMetaKeywords")]
		public IEnumerable<string> SeoMetaKeywords
		{
			get { return Umbraco.Web.PublishedContentModels.Seo.GetSeoMetaKeywords(this); }
		}

		///<summary>
		/// Title: The title of the page, this is also the first text in a google search result. The ideal length is shorter than 60 characters
		///</summary>
		[ImplementPropertyType("seoTitle")]
		public string SeoTitle
		{
			get { return Umbraco.Web.PublishedContentModels.Seo.GetSeoTitle(this); }
		}

		///<summary>
		/// Page Display SetUp: Check me true if you dont want to display page on live website
		///</summary>
		[ImplementPropertyType("umbracoNaviHide")]
		public bool UmbracoNaviHide
		{
			get { return Umbraco.Web.PublishedContentModels.Seo.GetUmbracoNaviHide(this); }
		}

		///<summary>
		/// Url Shortner: Please note that the values you use must be lowercase, not use a leading slash and not use a trailing ".aspx" or trailing slash. If you are adding multiple values, they must be separated with a comma.
		///</summary>
		[ImplementPropertyType("umbracoUrlAlias")]
		public string UmbracoUrlAlias
		{
			get { return Umbraco.Web.PublishedContentModels.Seo.GetUmbracoUrlAlias(this); }
		}
	}

	/// <summary>LFZ Profile</summary>
	[PublishedContentModel("lFZProfile")]
	public partial class LFzprofile : PublishedContentModel, IBannerControl, ISeo
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "lFZProfile";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public LFzprofile(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<LFzprofile, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Board of Directors List
		///</summary>
		[ImplementPropertyType("boardOfDirectorsList")]
		public IEnumerable<IPublishedContent> BoardOfDirectorsList
		{
			get { return this.GetPropertyValue<IEnumerable<IPublishedContent>>("boardOfDirectorsList"); }
		}

		///<summary>
		/// Mission Description
		///</summary>
		[ImplementPropertyType("missionDescription")]
		public string MissionDescription
		{
			get { return this.GetPropertyValue<string>("missionDescription"); }
		}

		///<summary>
		/// Mission Title
		///</summary>
		[ImplementPropertyType("missionTitle")]
		public string MissionTitle
		{
			get { return this.GetPropertyValue<string>("missionTitle"); }
		}

		///<summary>
		/// Title
		///</summary>
		[ImplementPropertyType("title")]
		public string Title
		{
			get { return this.GetPropertyValue<string>("title"); }
		}

		///<summary>
		/// Value Text
		///</summary>
		[ImplementPropertyType("valueText")]
		public IHtmlString ValueText
		{
			get { return this.GetPropertyValue<IHtmlString>("valueText"); }
		}

		///<summary>
		/// Vision Description
		///</summary>
		[ImplementPropertyType("visionDescription")]
		public string VisionDescription
		{
			get { return this.GetPropertyValue<string>("visionDescription"); }
		}

		///<summary>
		/// Vision Title
		///</summary>
		[ImplementPropertyType("visionTitle")]
		public string VisionTitle
		{
			get { return this.GetPropertyValue<string>("visionTitle"); }
		}

		///<summary>
		/// Banner Background Image
		///</summary>
		[ImplementPropertyType("bannerBackgroundImage")]
		public IPublishedContent BannerBackgroundImage
		{
			get { return Umbraco.Web.PublishedContentModels.BannerControl.GetBannerBackgroundImage(this); }
		}

		///<summary>
		/// Banner Description
		///</summary>
		[ImplementPropertyType("bannerDescription")]
		public string BannerDescription
		{
			get { return Umbraco.Web.PublishedContentModels.BannerControl.GetBannerDescription(this); }
		}

		///<summary>
		/// Banner Mobile Image
		///</summary>
		[ImplementPropertyType("bannerMobileImage")]
		public IPublishedContent BannerMobileImage
		{
			get { return Umbraco.Web.PublishedContentModels.BannerControl.GetBannerMobileImage(this); }
		}

		///<summary>
		/// Banner Section Animation
		///</summary>
		[ImplementPropertyType("bannerSectionAnimation")]
		public string BannerSectionAnimation
		{
			get { return Umbraco.Web.PublishedContentModels.BannerControl.GetBannerSectionAnimation(this); }
		}

		///<summary>
		/// Banner Title
		///</summary>
		[ImplementPropertyType("bannerTitle")]
		public string BannerTitle
		{
			get { return Umbraco.Web.PublishedContentModels.BannerControl.GetBannerTitle(this); }
		}

		///<summary>
		/// Hide Banner Section
		///</summary>
		[ImplementPropertyType("isBanner")]
		public bool IsBanner
		{
			get { return Umbraco.Web.PublishedContentModels.BannerControl.GetIsBanner(this); }
		}

		///<summary>
		/// Show Video
		///</summary>
		[ImplementPropertyType("isBannerVideo")]
		public bool IsBannerVideo
		{
			get { return Umbraco.Web.PublishedContentModels.BannerControl.GetIsBannerVideo(this); }
		}

		///<summary>
		/// Video Url
		///</summary>
		[ImplementPropertyType("videoUrl")]
		public string VideoUrl
		{
			get { return Umbraco.Web.PublishedContentModels.BannerControl.GetVideoUrl(this); }
		}

		///<summary>
		/// Meta description: A brief description of the content on your page. This text is shown below the title in a google search result. The ideal length is between 50 and 150
		///</summary>
		[ImplementPropertyType("seoMetaDescription")]
		public string SeoMetaDescription
		{
			get { return Umbraco.Web.PublishedContentModels.Seo.GetSeoMetaDescription(this); }
		}

		///<summary>
		/// Meta keywords: Keywords that describe the content of the page. This is considered optional since most modern search engines don't use this anymore
		///</summary>
		[ImplementPropertyType("seoMetaKeywords")]
		public IEnumerable<string> SeoMetaKeywords
		{
			get { return Umbraco.Web.PublishedContentModels.Seo.GetSeoMetaKeywords(this); }
		}

		///<summary>
		/// Title: The title of the page, this is also the first text in a google search result. The ideal length is shorter than 60 characters
		///</summary>
		[ImplementPropertyType("seoTitle")]
		public string SeoTitle
		{
			get { return Umbraco.Web.PublishedContentModels.Seo.GetSeoTitle(this); }
		}

		///<summary>
		/// Page Display SetUp: Check me true if you dont want to display page on live website
		///</summary>
		[ImplementPropertyType("umbracoNaviHide")]
		public bool UmbracoNaviHide
		{
			get { return Umbraco.Web.PublishedContentModels.Seo.GetUmbracoNaviHide(this); }
		}

		///<summary>
		/// Url Shortner: Please note that the values you use must be lowercase, not use a leading slash and not use a trailing ".aspx" or trailing slash. If you are adding multiple values, they must be separated with a comma.
		///</summary>
		[ImplementPropertyType("umbracoUrlAlias")]
		public string UmbracoUrlAlias
		{
			get { return Umbraco.Web.PublishedContentModels.Seo.GetUmbracoUrlAlias(this); }
		}
	}

	/// <summary>Board of Directors</summary>
	[PublishedContentModel("boardOfDirectors")]
	public partial class BoardOfDirectors : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "boardOfDirectors";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public BoardOfDirectors(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<BoardOfDirectors, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Director Description
		///</summary>
		[ImplementPropertyType("directorDescription")]
		public IHtmlString DirectorDescription
		{
			get { return this.GetPropertyValue<IHtmlString>("directorDescription"); }
		}

		///<summary>
		/// Director Designation
		///</summary>
		[ImplementPropertyType("directorDesignation")]
		public string DirectorDesignation
		{
			get { return this.GetPropertyValue<string>("directorDesignation"); }
		}

		///<summary>
		/// Director Name
		///</summary>
		[ImplementPropertyType("directorName")]
		public string DirectorName
		{
			get { return this.GetPropertyValue<string>("directorName"); }
		}

		///<summary>
		/// Director Surname: Director Surname
		///</summary>
		[ImplementPropertyType("directorSurname")]
		public string DirectorSurname
		{
			get { return this.GetPropertyValue<string>("directorSurname"); }
		}

		///<summary>
		/// Profile Picture
		///</summary>
		[ImplementPropertyType("profilePicture")]
		public IPublishedContent ProfilePicture
		{
			get { return this.GetPropertyValue<IPublishedContent>("profilePicture"); }
		}
	}

	/// <summary>Media News</summary>
	[PublishedContentModel("mediaNews")]
	public partial class MediaNews : PublishedContentModel, IBannerControl, ISeo
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "mediaNews";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public MediaNews(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<MediaNews, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Banner Background Image
		///</summary>
		[ImplementPropertyType("bannerBackgroundImage")]
		public IPublishedContent BannerBackgroundImage
		{
			get { return Umbraco.Web.PublishedContentModels.BannerControl.GetBannerBackgroundImage(this); }
		}

		///<summary>
		/// Banner Description
		///</summary>
		[ImplementPropertyType("bannerDescription")]
		public string BannerDescription
		{
			get { return Umbraco.Web.PublishedContentModels.BannerControl.GetBannerDescription(this); }
		}

		///<summary>
		/// Banner Mobile Image
		///</summary>
		[ImplementPropertyType("bannerMobileImage")]
		public IPublishedContent BannerMobileImage
		{
			get { return Umbraco.Web.PublishedContentModels.BannerControl.GetBannerMobileImage(this); }
		}

		///<summary>
		/// Banner Section Animation
		///</summary>
		[ImplementPropertyType("bannerSectionAnimation")]
		public string BannerSectionAnimation
		{
			get { return Umbraco.Web.PublishedContentModels.BannerControl.GetBannerSectionAnimation(this); }
		}

		///<summary>
		/// Banner Title
		///</summary>
		[ImplementPropertyType("bannerTitle")]
		public string BannerTitle
		{
			get { return Umbraco.Web.PublishedContentModels.BannerControl.GetBannerTitle(this); }
		}

		///<summary>
		/// Hide Banner Section
		///</summary>
		[ImplementPropertyType("isBanner")]
		public bool IsBanner
		{
			get { return Umbraco.Web.PublishedContentModels.BannerControl.GetIsBanner(this); }
		}

		///<summary>
		/// Show Video
		///</summary>
		[ImplementPropertyType("isBannerVideo")]
		public bool IsBannerVideo
		{
			get { return Umbraco.Web.PublishedContentModels.BannerControl.GetIsBannerVideo(this); }
		}

		///<summary>
		/// Video Url
		///</summary>
		[ImplementPropertyType("videoUrl")]
		public string VideoUrl
		{
			get { return Umbraco.Web.PublishedContentModels.BannerControl.GetVideoUrl(this); }
		}

		///<summary>
		/// Meta description: A brief description of the content on your page. This text is shown below the title in a google search result. The ideal length is between 50 and 150
		///</summary>
		[ImplementPropertyType("seoMetaDescription")]
		public string SeoMetaDescription
		{
			get { return Umbraco.Web.PublishedContentModels.Seo.GetSeoMetaDescription(this); }
		}

		///<summary>
		/// Meta keywords: Keywords that describe the content of the page. This is considered optional since most modern search engines don't use this anymore
		///</summary>
		[ImplementPropertyType("seoMetaKeywords")]
		public IEnumerable<string> SeoMetaKeywords
		{
			get { return Umbraco.Web.PublishedContentModels.Seo.GetSeoMetaKeywords(this); }
		}

		///<summary>
		/// Title: The title of the page, this is also the first text in a google search result. The ideal length is shorter than 60 characters
		///</summary>
		[ImplementPropertyType("seoTitle")]
		public string SeoTitle
		{
			get { return Umbraco.Web.PublishedContentModels.Seo.GetSeoTitle(this); }
		}

		///<summary>
		/// Page Display SetUp: Check me true if you dont want to display page on live website
		///</summary>
		[ImplementPropertyType("umbracoNaviHide")]
		public bool UmbracoNaviHide
		{
			get { return Umbraco.Web.PublishedContentModels.Seo.GetUmbracoNaviHide(this); }
		}

		///<summary>
		/// Url Shortner: Please note that the values you use must be lowercase, not use a leading slash and not use a trailing ".aspx" or trailing slash. If you are adding multiple values, they must be separated with a comma.
		///</summary>
		[ImplementPropertyType("umbracoUrlAlias")]
		public string UmbracoUrlAlias
		{
			get { return Umbraco.Web.PublishedContentModels.Seo.GetUmbracoUrlAlias(this); }
		}
	}

	/// <summary>Media News Content</summary>
	[PublishedContentModel("mediaNewsContent")]
	public partial class MediaNewsContent : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "mediaNewsContent";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public MediaNewsContent(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<MediaNewsContent, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Center Body Text
		///</summary>
		[ImplementPropertyType("centerBodyText")]
		public IHtmlString CenterBodyText
		{
			get { return this.GetPropertyValue<IHtmlString>("centerBodyText"); }
		}

		///<summary>
		/// External Link
		///</summary>
		[ImplementPropertyType("externalLink")]
		public string ExternalLink
		{
			get { return this.GetPropertyValue<string>("externalLink"); }
		}

		///<summary>
		/// News Date
		///</summary>
		[ImplementPropertyType("newsDate")]
		public string NewsDate
		{
			get { return this.GetPropertyValue<string>("newsDate"); }
		}

		///<summary>
		/// News Text
		///</summary>
		[ImplementPropertyType("newsText")]
		public string NewsText
		{
			get { return this.GetPropertyValue<string>("newsText"); }
		}

		///<summary>
		/// News Thumb Image
		///</summary>
		[ImplementPropertyType("newsThumbImage")]
		public IPublishedContent NewsThumbImage
		{
			get { return this.GetPropertyValue<IPublishedContent>("newsThumbImage"); }
		}
	}

	/// <summary>Media News Article</summary>
	[PublishedContentModel("mediaNewsArticle")]
	public partial class MediaNewsArticle : PublishedContentModel, IBannerControl, ISeo
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "mediaNewsArticle";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public MediaNewsArticle(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<MediaNewsArticle, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Center Body Text
		///</summary>
		[ImplementPropertyType("centerBodyText")]
		public IHtmlString CenterBodyText
		{
			get { return this.GetPropertyValue<IHtmlString>("centerBodyText"); }
		}

		///<summary>
		/// Explore More Tilte
		///</summary>
		[ImplementPropertyType("exploreMoreTilte")]
		public string ExploreMoreTilte
		{
			get { return this.GetPropertyValue<string>("exploreMoreTilte"); }
		}

		///<summary>
		/// External Link
		///</summary>
		[ImplementPropertyType("externalLink")]
		public string ExternalLink
		{
			get { return this.GetPropertyValue<string>("externalLink"); }
		}

		///<summary>
		/// Home Page Heading
		///</summary>
		[ImplementPropertyType("homePageHeading")]
		public string HomePageHeading
		{
			get { return this.GetPropertyValue<string>("homePageHeading"); }
		}

		///<summary>
		/// News Date
		///</summary>
		[ImplementPropertyType("newsDate")]
		public DateTime NewsDate
		{
			get { return this.GetPropertyValue<DateTime>("newsDate"); }
		}

		///<summary>
		/// News Text
		///</summary>
		[ImplementPropertyType("newsText")]
		public string NewsText
		{
			get { return this.GetPropertyValue<string>("newsText"); }
		}

		///<summary>
		/// News Thumb Image
		///</summary>
		[ImplementPropertyType("newsThumbImage")]
		public IPublishedContent NewsThumbImage
		{
			get { return this.GetPropertyValue<IPublishedContent>("newsThumbImage"); }
		}

		///<summary>
		/// Publisher Name
		///</summary>
		[ImplementPropertyType("publisherName")]
		public string PublisherName
		{
			get { return this.GetPropertyValue<string>("publisherName"); }
		}

		///<summary>
		/// Show Html
		///</summary>
		[ImplementPropertyType("showHtml")]
		public bool ShowHtml
		{
			get { return this.GetPropertyValue<bool>("showHtml"); }
		}

		///<summary>
		/// Banner Background Image
		///</summary>
		[ImplementPropertyType("bannerBackgroundImage")]
		public IPublishedContent BannerBackgroundImage
		{
			get { return Umbraco.Web.PublishedContentModels.BannerControl.GetBannerBackgroundImage(this); }
		}

		///<summary>
		/// Banner Description
		///</summary>
		[ImplementPropertyType("bannerDescription")]
		public string BannerDescription
		{
			get { return Umbraco.Web.PublishedContentModels.BannerControl.GetBannerDescription(this); }
		}

		///<summary>
		/// Banner Mobile Image
		///</summary>
		[ImplementPropertyType("bannerMobileImage")]
		public IPublishedContent BannerMobileImage
		{
			get { return Umbraco.Web.PublishedContentModels.BannerControl.GetBannerMobileImage(this); }
		}

		///<summary>
		/// Banner Section Animation
		///</summary>
		[ImplementPropertyType("bannerSectionAnimation")]
		public string BannerSectionAnimation
		{
			get { return Umbraco.Web.PublishedContentModels.BannerControl.GetBannerSectionAnimation(this); }
		}

		///<summary>
		/// Banner Title
		///</summary>
		[ImplementPropertyType("bannerTitle")]
		public string BannerTitle
		{
			get { return Umbraco.Web.PublishedContentModels.BannerControl.GetBannerTitle(this); }
		}

		///<summary>
		/// Hide Banner Section
		///</summary>
		[ImplementPropertyType("isBanner")]
		public bool IsBanner
		{
			get { return Umbraco.Web.PublishedContentModels.BannerControl.GetIsBanner(this); }
		}

		///<summary>
		/// Show Video
		///</summary>
		[ImplementPropertyType("isBannerVideo")]
		public bool IsBannerVideo
		{
			get { return Umbraco.Web.PublishedContentModels.BannerControl.GetIsBannerVideo(this); }
		}

		///<summary>
		/// Video Url
		///</summary>
		[ImplementPropertyType("videoUrl")]
		public string VideoUrl
		{
			get { return Umbraco.Web.PublishedContentModels.BannerControl.GetVideoUrl(this); }
		}

		///<summary>
		/// Meta description: A brief description of the content on your page. This text is shown below the title in a google search result. The ideal length is between 50 and 150
		///</summary>
		[ImplementPropertyType("seoMetaDescription")]
		public string SeoMetaDescription
		{
			get { return Umbraco.Web.PublishedContentModels.Seo.GetSeoMetaDescription(this); }
		}

		///<summary>
		/// Meta keywords: Keywords that describe the content of the page. This is considered optional since most modern search engines don't use this anymore
		///</summary>
		[ImplementPropertyType("seoMetaKeywords")]
		public IEnumerable<string> SeoMetaKeywords
		{
			get { return Umbraco.Web.PublishedContentModels.Seo.GetSeoMetaKeywords(this); }
		}

		///<summary>
		/// Title: The title of the page, this is also the first text in a google search result. The ideal length is shorter than 60 characters
		///</summary>
		[ImplementPropertyType("seoTitle")]
		public string SeoTitle
		{
			get { return Umbraco.Web.PublishedContentModels.Seo.GetSeoTitle(this); }
		}

		///<summary>
		/// Page Display SetUp: Check me true if you dont want to display page on live website
		///</summary>
		[ImplementPropertyType("umbracoNaviHide")]
		public bool UmbracoNaviHide
		{
			get { return Umbraco.Web.PublishedContentModels.Seo.GetUmbracoNaviHide(this); }
		}

		///<summary>
		/// Url Shortner: Please note that the values you use must be lowercase, not use a leading slash and not use a trailing ".aspx" or trailing slash. If you are adding multiple values, they must be separated with a comma.
		///</summary>
		[ImplementPropertyType("umbracoUrlAlias")]
		public string UmbracoUrlAlias
		{
			get { return Umbraco.Web.PublishedContentModels.Seo.GetUmbracoUrlAlias(this); }
		}
	}

	/// <summary>Gallery</summary>
	[PublishedContentModel("gallery")]
	public partial class Gallery : PublishedContentModel, IBannerControl, ISeo
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "gallery";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Gallery(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Gallery, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Gallery Image
		///</summary>
		[ImplementPropertyType("galleryImage")]
		public IEnumerable<IPublishedContent> GalleryImage
		{
			get { return this.GetPropertyValue<IEnumerable<IPublishedContent>>("galleryImage"); }
		}

		///<summary>
		/// Banner Background Image
		///</summary>
		[ImplementPropertyType("bannerBackgroundImage")]
		public IPublishedContent BannerBackgroundImage
		{
			get { return Umbraco.Web.PublishedContentModels.BannerControl.GetBannerBackgroundImage(this); }
		}

		///<summary>
		/// Banner Description
		///</summary>
		[ImplementPropertyType("bannerDescription")]
		public string BannerDescription
		{
			get { return Umbraco.Web.PublishedContentModels.BannerControl.GetBannerDescription(this); }
		}

		///<summary>
		/// Banner Mobile Image
		///</summary>
		[ImplementPropertyType("bannerMobileImage")]
		public IPublishedContent BannerMobileImage
		{
			get { return Umbraco.Web.PublishedContentModels.BannerControl.GetBannerMobileImage(this); }
		}

		///<summary>
		/// Banner Section Animation
		///</summary>
		[ImplementPropertyType("bannerSectionAnimation")]
		public string BannerSectionAnimation
		{
			get { return Umbraco.Web.PublishedContentModels.BannerControl.GetBannerSectionAnimation(this); }
		}

		///<summary>
		/// Banner Title
		///</summary>
		[ImplementPropertyType("bannerTitle")]
		public string BannerTitle
		{
			get { return Umbraco.Web.PublishedContentModels.BannerControl.GetBannerTitle(this); }
		}

		///<summary>
		/// Hide Banner Section
		///</summary>
		[ImplementPropertyType("isBanner")]
		public bool IsBanner
		{
			get { return Umbraco.Web.PublishedContentModels.BannerControl.GetIsBanner(this); }
		}

		///<summary>
		/// Show Video
		///</summary>
		[ImplementPropertyType("isBannerVideo")]
		public bool IsBannerVideo
		{
			get { return Umbraco.Web.PublishedContentModels.BannerControl.GetIsBannerVideo(this); }
		}

		///<summary>
		/// Video Url
		///</summary>
		[ImplementPropertyType("videoUrl")]
		public string VideoUrl
		{
			get { return Umbraco.Web.PublishedContentModels.BannerControl.GetVideoUrl(this); }
		}

		///<summary>
		/// Meta description: A brief description of the content on your page. This text is shown below the title in a google search result. The ideal length is between 50 and 150
		///</summary>
		[ImplementPropertyType("seoMetaDescription")]
		public string SeoMetaDescription
		{
			get { return Umbraco.Web.PublishedContentModels.Seo.GetSeoMetaDescription(this); }
		}

		///<summary>
		/// Meta keywords: Keywords that describe the content of the page. This is considered optional since most modern search engines don't use this anymore
		///</summary>
		[ImplementPropertyType("seoMetaKeywords")]
		public IEnumerable<string> SeoMetaKeywords
		{
			get { return Umbraco.Web.PublishedContentModels.Seo.GetSeoMetaKeywords(this); }
		}

		///<summary>
		/// Title: The title of the page, this is also the first text in a google search result. The ideal length is shorter than 60 characters
		///</summary>
		[ImplementPropertyType("seoTitle")]
		public string SeoTitle
		{
			get { return Umbraco.Web.PublishedContentModels.Seo.GetSeoTitle(this); }
		}

		///<summary>
		/// Page Display SetUp: Check me true if you dont want to display page on live website
		///</summary>
		[ImplementPropertyType("umbracoNaviHide")]
		public bool UmbracoNaviHide
		{
			get { return Umbraco.Web.PublishedContentModels.Seo.GetUmbracoNaviHide(this); }
		}

		///<summary>
		/// Url Shortner: Please note that the values you use must be lowercase, not use a leading slash and not use a trailing ".aspx" or trailing slash. If you are adding multiple values, they must be separated with a comma.
		///</summary>
		[ImplementPropertyType("umbracoUrlAlias")]
		public string UmbracoUrlAlias
		{
			get { return Umbraco.Web.PublishedContentModels.Seo.GetUmbracoUrlAlias(this); }
		}
	}

	/// <summary>Gallery Images</summary>
	[PublishedContentModel("galleryImages")]
	public partial class GalleryImages : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "galleryImages";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public GalleryImages(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<GalleryImages, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Big Image
		///</summary>
		[ImplementPropertyType("bigImage")]
		public IPublishedContent BigImage
		{
			get { return this.GetPropertyValue<IPublishedContent>("bigImage"); }
		}

		///<summary>
		/// Gallery Image Type
		///</summary>
		[ImplementPropertyType("galleryImageType")]
		public string GalleryImageType
		{
			get { return this.GetPropertyValue<string>("galleryImageType"); }
		}

		///<summary>
		/// Image
		///</summary>
		[ImplementPropertyType("image")]
		public IPublishedContent Image
		{
			get { return this.GetPropertyValue<IPublishedContent>("image"); }
		}

		///<summary>
		/// Video enable
		///</summary>
		[ImplementPropertyType("videoEnable")]
		public bool VideoEnable
		{
			get { return this.GetPropertyValue<bool>("videoEnable"); }
		}

		///<summary>
		/// VideoURL
		///</summary>
		[ImplementPropertyType("videoURL")]
		public string VideoUrl
		{
			get { return this.GetPropertyValue<string>("videoURL"); }
		}
	}

	/// <summary>Contact</summary>
	[PublishedContentModel("contact")]
	public partial class Contact : PublishedContentModel, IBannerControl, ISeo
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "contact";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Contact(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Contact, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Enter Email
		///</summary>
		[ImplementPropertyType("enterEmail")]
		public string EnterEmail
		{
			get { return this.GetPropertyValue<string>("enterEmail"); }
		}

		///<summary>
		/// form
		///</summary>
		[ImplementPropertyType("form")]
		public IHtmlString Form
		{
			get { return this.GetPropertyValue<IHtmlString>("form"); }
		}

		///<summary>
		/// Form Title: Title
		///</summary>
		[ImplementPropertyType("formTitle")]
		public string FormTitle
		{
			get { return this.GetPropertyValue<string>("formTitle"); }
		}

		///<summary>
		/// GForm
		///</summary>
		[ImplementPropertyType("gForm")]
		public object GForm
		{
			get { return this.GetPropertyValue("gForm"); }
		}

		///<summary>
		/// Enter Name: Enter Name
		///</summary>
		[ImplementPropertyType("newsubscription")]
		public string Newsubscription
		{
			get { return this.GetPropertyValue<string>("newsubscription"); }
		}

		///<summary>
		/// Show Address: Tick to show address
		///</summary>
		[ImplementPropertyType("showAddress")]
		public bool ShowAddress
		{
			get { return this.GetPropertyValue<bool>("showAddress"); }
		}

		///<summary>
		/// Banner Background Image
		///</summary>
		[ImplementPropertyType("bannerBackgroundImage")]
		public IPublishedContent BannerBackgroundImage
		{
			get { return Umbraco.Web.PublishedContentModels.BannerControl.GetBannerBackgroundImage(this); }
		}

		///<summary>
		/// Banner Description
		///</summary>
		[ImplementPropertyType("bannerDescription")]
		public string BannerDescription
		{
			get { return Umbraco.Web.PublishedContentModels.BannerControl.GetBannerDescription(this); }
		}

		///<summary>
		/// Banner Mobile Image
		///</summary>
		[ImplementPropertyType("bannerMobileImage")]
		public IPublishedContent BannerMobileImage
		{
			get { return Umbraco.Web.PublishedContentModels.BannerControl.GetBannerMobileImage(this); }
		}

		///<summary>
		/// Banner Section Animation
		///</summary>
		[ImplementPropertyType("bannerSectionAnimation")]
		public string BannerSectionAnimation
		{
			get { return Umbraco.Web.PublishedContentModels.BannerControl.GetBannerSectionAnimation(this); }
		}

		///<summary>
		/// Banner Title
		///</summary>
		[ImplementPropertyType("bannerTitle")]
		public string BannerTitle
		{
			get { return Umbraco.Web.PublishedContentModels.BannerControl.GetBannerTitle(this); }
		}

		///<summary>
		/// Hide Banner Section
		///</summary>
		[ImplementPropertyType("isBanner")]
		public bool IsBanner
		{
			get { return Umbraco.Web.PublishedContentModels.BannerControl.GetIsBanner(this); }
		}

		///<summary>
		/// Show Video
		///</summary>
		[ImplementPropertyType("isBannerVideo")]
		public bool IsBannerVideo
		{
			get { return Umbraco.Web.PublishedContentModels.BannerControl.GetIsBannerVideo(this); }
		}

		///<summary>
		/// Video Url
		///</summary>
		[ImplementPropertyType("videoUrl")]
		public string VideoUrl
		{
			get { return Umbraco.Web.PublishedContentModels.BannerControl.GetVideoUrl(this); }
		}

		///<summary>
		/// Meta description: A brief description of the content on your page. This text is shown below the title in a google search result. The ideal length is between 50 and 150
		///</summary>
		[ImplementPropertyType("seoMetaDescription")]
		public string SeoMetaDescription
		{
			get { return Umbraco.Web.PublishedContentModels.Seo.GetSeoMetaDescription(this); }
		}

		///<summary>
		/// Meta keywords: Keywords that describe the content of the page. This is considered optional since most modern search engines don't use this anymore
		///</summary>
		[ImplementPropertyType("seoMetaKeywords")]
		public IEnumerable<string> SeoMetaKeywords
		{
			get { return Umbraco.Web.PublishedContentModels.Seo.GetSeoMetaKeywords(this); }
		}

		///<summary>
		/// Title: The title of the page, this is also the first text in a google search result. The ideal length is shorter than 60 characters
		///</summary>
		[ImplementPropertyType("seoTitle")]
		public string SeoTitle
		{
			get { return Umbraco.Web.PublishedContentModels.Seo.GetSeoTitle(this); }
		}

		///<summary>
		/// Page Display SetUp: Check me true if you dont want to display page on live website
		///</summary>
		[ImplementPropertyType("umbracoNaviHide")]
		public bool UmbracoNaviHide
		{
			get { return Umbraco.Web.PublishedContentModels.Seo.GetUmbracoNaviHide(this); }
		}

		///<summary>
		/// Url Shortner: Please note that the values you use must be lowercase, not use a leading slash and not use a trailing ".aspx" or trailing slash. If you are adding multiple values, they must be separated with a comma.
		///</summary>
		[ImplementPropertyType("umbracoUrlAlias")]
		public string UmbracoUrlAlias
		{
			get { return Umbraco.Web.PublishedContentModels.Seo.GetUmbracoUrlAlias(this); }
		}
	}

	/// <summary>Careers</summary>
	[PublishedContentModel("careers")]
	public partial class Careers : PublishedContentModel, IBannerControl, ISeo
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "careers";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Careers(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Careers, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Banner Background Image
		///</summary>
		[ImplementPropertyType("bannerBackgroundImage")]
		public IPublishedContent BannerBackgroundImage
		{
			get { return Umbraco.Web.PublishedContentModels.BannerControl.GetBannerBackgroundImage(this); }
		}

		///<summary>
		/// Banner Description
		///</summary>
		[ImplementPropertyType("bannerDescription")]
		public string BannerDescription
		{
			get { return Umbraco.Web.PublishedContentModels.BannerControl.GetBannerDescription(this); }
		}

		///<summary>
		/// Banner Mobile Image
		///</summary>
		[ImplementPropertyType("bannerMobileImage")]
		public IPublishedContent BannerMobileImage
		{
			get { return Umbraco.Web.PublishedContentModels.BannerControl.GetBannerMobileImage(this); }
		}

		///<summary>
		/// Banner Section Animation
		///</summary>
		[ImplementPropertyType("bannerSectionAnimation")]
		public string BannerSectionAnimation
		{
			get { return Umbraco.Web.PublishedContentModels.BannerControl.GetBannerSectionAnimation(this); }
		}

		///<summary>
		/// Banner Title
		///</summary>
		[ImplementPropertyType("bannerTitle")]
		public string BannerTitle
		{
			get { return Umbraco.Web.PublishedContentModels.BannerControl.GetBannerTitle(this); }
		}

		///<summary>
		/// Hide Banner Section
		///</summary>
		[ImplementPropertyType("isBanner")]
		public bool IsBanner
		{
			get { return Umbraco.Web.PublishedContentModels.BannerControl.GetIsBanner(this); }
		}

		///<summary>
		/// Show Video
		///</summary>
		[ImplementPropertyType("isBannerVideo")]
		public bool IsBannerVideo
		{
			get { return Umbraco.Web.PublishedContentModels.BannerControl.GetIsBannerVideo(this); }
		}

		///<summary>
		/// Video Url
		///</summary>
		[ImplementPropertyType("videoUrl")]
		public string VideoUrl
		{
			get { return Umbraco.Web.PublishedContentModels.BannerControl.GetVideoUrl(this); }
		}

		///<summary>
		/// Meta description: A brief description of the content on your page. This text is shown below the title in a google search result. The ideal length is between 50 and 150
		///</summary>
		[ImplementPropertyType("seoMetaDescription")]
		public string SeoMetaDescription
		{
			get { return Umbraco.Web.PublishedContentModels.Seo.GetSeoMetaDescription(this); }
		}

		///<summary>
		/// Meta keywords: Keywords that describe the content of the page. This is considered optional since most modern search engines don't use this anymore
		///</summary>
		[ImplementPropertyType("seoMetaKeywords")]
		public IEnumerable<string> SeoMetaKeywords
		{
			get { return Umbraco.Web.PublishedContentModels.Seo.GetSeoMetaKeywords(this); }
		}

		///<summary>
		/// Title: The title of the page, this is also the first text in a google search result. The ideal length is shorter than 60 characters
		///</summary>
		[ImplementPropertyType("seoTitle")]
		public string SeoTitle
		{
			get { return Umbraco.Web.PublishedContentModels.Seo.GetSeoTitle(this); }
		}

		///<summary>
		/// Page Display SetUp: Check me true if you dont want to display page on live website
		///</summary>
		[ImplementPropertyType("umbracoNaviHide")]
		public bool UmbracoNaviHide
		{
			get { return Umbraco.Web.PublishedContentModels.Seo.GetUmbracoNaviHide(this); }
		}

		///<summary>
		/// Url Shortner: Please note that the values you use must be lowercase, not use a leading slash and not use a trailing ".aspx" or trailing slash. If you are adding multiple values, they must be separated with a comma.
		///</summary>
		[ImplementPropertyType("umbracoUrlAlias")]
		public string UmbracoUrlAlias
		{
			get { return Umbraco.Web.PublishedContentModels.Seo.GetUmbracoUrlAlias(this); }
		}
	}

	/// <summary>Grievance</summary>
	[PublishedContentModel("contact1")]
	public partial class Contact1 : PublishedContentModel, IBannerControl, ISeo
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "contact1";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Contact1(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Contact1, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Enquiry: Enquiry Description
		///</summary>
		[ImplementPropertyType("enquiry")]
		public string Enquiry
		{
			get { return this.GetPropertyValue<string>("enquiry"); }
		}

		///<summary>
		/// Banner Background Image
		///</summary>
		[ImplementPropertyType("bannerBackgroundImage")]
		public IPublishedContent BannerBackgroundImage
		{
			get { return Umbraco.Web.PublishedContentModels.BannerControl.GetBannerBackgroundImage(this); }
		}

		///<summary>
		/// Banner Description
		///</summary>
		[ImplementPropertyType("bannerDescription")]
		public string BannerDescription
		{
			get { return Umbraco.Web.PublishedContentModels.BannerControl.GetBannerDescription(this); }
		}

		///<summary>
		/// Banner Mobile Image
		///</summary>
		[ImplementPropertyType("bannerMobileImage")]
		public IPublishedContent BannerMobileImage
		{
			get { return Umbraco.Web.PublishedContentModels.BannerControl.GetBannerMobileImage(this); }
		}

		///<summary>
		/// Banner Section Animation
		///</summary>
		[ImplementPropertyType("bannerSectionAnimation")]
		public string BannerSectionAnimation
		{
			get { return Umbraco.Web.PublishedContentModels.BannerControl.GetBannerSectionAnimation(this); }
		}

		///<summary>
		/// Banner Title
		///</summary>
		[ImplementPropertyType("bannerTitle")]
		public string BannerTitle
		{
			get { return Umbraco.Web.PublishedContentModels.BannerControl.GetBannerTitle(this); }
		}

		///<summary>
		/// Hide Banner Section
		///</summary>
		[ImplementPropertyType("isBanner")]
		public bool IsBanner
		{
			get { return Umbraco.Web.PublishedContentModels.BannerControl.GetIsBanner(this); }
		}

		///<summary>
		/// Show Video
		///</summary>
		[ImplementPropertyType("isBannerVideo")]
		public bool IsBannerVideo
		{
			get { return Umbraco.Web.PublishedContentModels.BannerControl.GetIsBannerVideo(this); }
		}

		///<summary>
		/// Video Url
		///</summary>
		[ImplementPropertyType("videoUrl")]
		public string VideoUrl
		{
			get { return Umbraco.Web.PublishedContentModels.BannerControl.GetVideoUrl(this); }
		}

		///<summary>
		/// Meta description: A brief description of the content on your page. This text is shown below the title in a google search result. The ideal length is between 50 and 150
		///</summary>
		[ImplementPropertyType("seoMetaDescription")]
		public string SeoMetaDescription
		{
			get { return Umbraco.Web.PublishedContentModels.Seo.GetSeoMetaDescription(this); }
		}

		///<summary>
		/// Meta keywords: Keywords that describe the content of the page. This is considered optional since most modern search engines don't use this anymore
		///</summary>
		[ImplementPropertyType("seoMetaKeywords")]
		public IEnumerable<string> SeoMetaKeywords
		{
			get { return Umbraco.Web.PublishedContentModels.Seo.GetSeoMetaKeywords(this); }
		}

		///<summary>
		/// Title: The title of the page, this is also the first text in a google search result. The ideal length is shorter than 60 characters
		///</summary>
		[ImplementPropertyType("seoTitle")]
		public string SeoTitle
		{
			get { return Umbraco.Web.PublishedContentModels.Seo.GetSeoTitle(this); }
		}

		///<summary>
		/// Page Display SetUp: Check me true if you dont want to display page on live website
		///</summary>
		[ImplementPropertyType("umbracoNaviHide")]
		public bool UmbracoNaviHide
		{
			get { return Umbraco.Web.PublishedContentModels.Seo.GetUmbracoNaviHide(this); }
		}

		///<summary>
		/// Url Shortner: Please note that the values you use must be lowercase, not use a leading slash and not use a trailing ".aspx" or trailing slash. If you are adding multiple values, they must be separated with a comma.
		///</summary>
		[ImplementPropertyType("umbracoUrlAlias")]
		public string UmbracoUrlAlias
		{
			get { return Umbraco.Web.PublishedContentModels.Seo.GetUmbracoUrlAlias(this); }
		}
	}

	/// <summary>Blog</summary>
	[PublishedContentModel("mediaNews1")]
	public partial class MediaNews1 : PublishedContentModel, IBannerControl, ISeo
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "mediaNews1";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public MediaNews1(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<MediaNews1, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Banner Background Image
		///</summary>
		[ImplementPropertyType("bannerBackgroundImage")]
		public IPublishedContent BannerBackgroundImage
		{
			get { return Umbraco.Web.PublishedContentModels.BannerControl.GetBannerBackgroundImage(this); }
		}

		///<summary>
		/// Banner Description
		///</summary>
		[ImplementPropertyType("bannerDescription")]
		public string BannerDescription
		{
			get { return Umbraco.Web.PublishedContentModels.BannerControl.GetBannerDescription(this); }
		}

		///<summary>
		/// Banner Mobile Image
		///</summary>
		[ImplementPropertyType("bannerMobileImage")]
		public IPublishedContent BannerMobileImage
		{
			get { return Umbraco.Web.PublishedContentModels.BannerControl.GetBannerMobileImage(this); }
		}

		///<summary>
		/// Banner Section Animation
		///</summary>
		[ImplementPropertyType("bannerSectionAnimation")]
		public string BannerSectionAnimation
		{
			get { return Umbraco.Web.PublishedContentModels.BannerControl.GetBannerSectionAnimation(this); }
		}

		///<summary>
		/// Banner Title
		///</summary>
		[ImplementPropertyType("bannerTitle")]
		public string BannerTitle
		{
			get { return Umbraco.Web.PublishedContentModels.BannerControl.GetBannerTitle(this); }
		}

		///<summary>
		/// Hide Banner Section
		///</summary>
		[ImplementPropertyType("isBanner")]
		public bool IsBanner
		{
			get { return Umbraco.Web.PublishedContentModels.BannerControl.GetIsBanner(this); }
		}

		///<summary>
		/// Show Video
		///</summary>
		[ImplementPropertyType("isBannerVideo")]
		public bool IsBannerVideo
		{
			get { return Umbraco.Web.PublishedContentModels.BannerControl.GetIsBannerVideo(this); }
		}

		///<summary>
		/// Video Url
		///</summary>
		[ImplementPropertyType("videoUrl")]
		public string VideoUrl
		{
			get { return Umbraco.Web.PublishedContentModels.BannerControl.GetVideoUrl(this); }
		}

		///<summary>
		/// Meta description: A brief description of the content on your page. This text is shown below the title in a google search result. The ideal length is between 50 and 150
		///</summary>
		[ImplementPropertyType("seoMetaDescription")]
		public string SeoMetaDescription
		{
			get { return Umbraco.Web.PublishedContentModels.Seo.GetSeoMetaDescription(this); }
		}

		///<summary>
		/// Meta keywords: Keywords that describe the content of the page. This is considered optional since most modern search engines don't use this anymore
		///</summary>
		[ImplementPropertyType("seoMetaKeywords")]
		public IEnumerable<string> SeoMetaKeywords
		{
			get { return Umbraco.Web.PublishedContentModels.Seo.GetSeoMetaKeywords(this); }
		}

		///<summary>
		/// Title: The title of the page, this is also the first text in a google search result. The ideal length is shorter than 60 characters
		///</summary>
		[ImplementPropertyType("seoTitle")]
		public string SeoTitle
		{
			get { return Umbraco.Web.PublishedContentModels.Seo.GetSeoTitle(this); }
		}

		///<summary>
		/// Page Display SetUp: Check me true if you dont want to display page on live website
		///</summary>
		[ImplementPropertyType("umbracoNaviHide")]
		public bool UmbracoNaviHide
		{
			get { return Umbraco.Web.PublishedContentModels.Seo.GetUmbracoNaviHide(this); }
		}

		///<summary>
		/// Url Shortner: Please note that the values you use must be lowercase, not use a leading slash and not use a trailing ".aspx" or trailing slash. If you are adding multiple values, they must be separated with a comma.
		///</summary>
		[ImplementPropertyType("umbracoUrlAlias")]
		public string UmbracoUrlAlias
		{
			get { return Umbraco.Web.PublishedContentModels.Seo.GetUmbracoUrlAlias(this); }
		}
	}

	/// <summary>Folder</summary>
	[PublishedContentModel("Folder")]
	public partial class Folder : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "Folder";
		public new const PublishedItemType ModelItemType = PublishedItemType.Media;
#pragma warning restore 0109

		public Folder(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Folder, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Contents:
		///</summary>
		[ImplementPropertyType("contents")]
		public object Contents
		{
			get { return this.GetPropertyValue("contents"); }
		}
	}

	/// <summary>Image</summary>
	[PublishedContentModel("Image")]
	public partial class Image : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "Image";
		public new const PublishedItemType ModelItemType = PublishedItemType.Media;
#pragma warning restore 0109

		public Image(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Image, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Size
		///</summary>
		[ImplementPropertyType("umbracoBytes")]
		public string UmbracoBytes
		{
			get { return this.GetPropertyValue<string>("umbracoBytes"); }
		}

		///<summary>
		/// Type
		///</summary>
		[ImplementPropertyType("umbracoExtension")]
		public string UmbracoExtension
		{
			get { return this.GetPropertyValue<string>("umbracoExtension"); }
		}

		///<summary>
		/// Upload image
		///</summary>
		[ImplementPropertyType("umbracoFile")]
		public Umbraco.Web.Models.ImageCropDataSet UmbracoFile
		{
			get { return this.GetPropertyValue<Umbraco.Web.Models.ImageCropDataSet>("umbracoFile"); }
		}

		///<summary>
		/// Height
		///</summary>
		[ImplementPropertyType("umbracoHeight")]
		public string UmbracoHeight
		{
			get { return this.GetPropertyValue<string>("umbracoHeight"); }
		}

		///<summary>
		/// Width
		///</summary>
		[ImplementPropertyType("umbracoWidth")]
		public string UmbracoWidth
		{
			get { return this.GetPropertyValue<string>("umbracoWidth"); }
		}
	}

	/// <summary>File</summary>
	[PublishedContentModel("File")]
	public partial class File : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "File";
		public new const PublishedItemType ModelItemType = PublishedItemType.Media;
#pragma warning restore 0109

		public File(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<File, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Size
		///</summary>
		[ImplementPropertyType("umbracoBytes")]
		public string UmbracoBytes
		{
			get { return this.GetPropertyValue<string>("umbracoBytes"); }
		}

		///<summary>
		/// Type
		///</summary>
		[ImplementPropertyType("umbracoExtension")]
		public string UmbracoExtension
		{
			get { return this.GetPropertyValue<string>("umbracoExtension"); }
		}

		///<summary>
		/// Upload file
		///</summary>
		[ImplementPropertyType("umbracoFile")]
		public string UmbracoFile
		{
			get { return this.GetPropertyValue<string>("umbracoFile"); }
		}
	}

	/// <summary>Member</summary>
	[PublishedContentModel("Member")]
	public partial class Member : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "Member";
		public new const PublishedItemType ModelItemType = PublishedItemType.Member;
#pragma warning restore 0109

		public Member(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Member, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Is Approved
		///</summary>
		[ImplementPropertyType("umbracoMemberApproved")]
		public bool UmbracoMemberApproved
		{
			get { return this.GetPropertyValue<bool>("umbracoMemberApproved"); }
		}

		///<summary>
		/// Comments
		///</summary>
		[ImplementPropertyType("umbracoMemberComments")]
		public string UmbracoMemberComments
		{
			get { return this.GetPropertyValue<string>("umbracoMemberComments"); }
		}

		///<summary>
		/// Failed Password Attempts
		///</summary>
		[ImplementPropertyType("umbracoMemberFailedPasswordAttempts")]
		public string UmbracoMemberFailedPasswordAttempts
		{
			get { return this.GetPropertyValue<string>("umbracoMemberFailedPasswordAttempts"); }
		}

		///<summary>
		/// Last Lockout Date
		///</summary>
		[ImplementPropertyType("umbracoMemberLastLockoutDate")]
		public string UmbracoMemberLastLockoutDate
		{
			get { return this.GetPropertyValue<string>("umbracoMemberLastLockoutDate"); }
		}

		///<summary>
		/// Last Login Date
		///</summary>
		[ImplementPropertyType("umbracoMemberLastLogin")]
		public string UmbracoMemberLastLogin
		{
			get { return this.GetPropertyValue<string>("umbracoMemberLastLogin"); }
		}

		///<summary>
		/// Last Password Change Date
		///</summary>
		[ImplementPropertyType("umbracoMemberLastPasswordChangeDate")]
		public string UmbracoMemberLastPasswordChangeDate
		{
			get { return this.GetPropertyValue<string>("umbracoMemberLastPasswordChangeDate"); }
		}

		///<summary>
		/// Is Locked Out
		///</summary>
		[ImplementPropertyType("umbracoMemberLockedOut")]
		public bool UmbracoMemberLockedOut
		{
			get { return this.GetPropertyValue<bool>("umbracoMemberLockedOut"); }
		}

		///<summary>
		/// Password Answer
		///</summary>
		[ImplementPropertyType("umbracoMemberPasswordRetrievalAnswer")]
		public string UmbracoMemberPasswordRetrievalAnswer
		{
			get { return this.GetPropertyValue<string>("umbracoMemberPasswordRetrievalAnswer"); }
		}

		///<summary>
		/// Password Question
		///</summary>
		[ImplementPropertyType("umbracoMemberPasswordRetrievalQuestion")]
		public string UmbracoMemberPasswordRetrievalQuestion
		{
			get { return this.GetPropertyValue<string>("umbracoMemberPasswordRetrievalQuestion"); }
		}
	}

}
